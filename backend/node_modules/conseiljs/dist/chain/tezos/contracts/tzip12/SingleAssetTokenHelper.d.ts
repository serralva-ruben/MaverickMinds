import { KeyStore, Signer } from '../../../../types/ExternalInterfaces';
interface SingleAssetSimpleStorage {
    administrator: string;
    tokens: number;
    ledger: number;
    metadata: number;
    paused: string;
    operators: number;
    tokenMetadata: number;
    totalSupply: number;
}
interface SingleAssetTokenDefinition {
    tokenid: number;
    metadata: Record<string, string>;
}
interface TransferPair {
    address: string;
    amount: number;
}
interface UpdateOperator {
    owner: string;
    operator: string;
}
export declare namespace SingleAssetTokenHelper {
    function verifyDestination(server: string, address: string): Promise<boolean>;
    function verifyScript(script: string): boolean;
    function deployContract(server: string, signer: Signer, keystore: KeyStore, fee: number, administrator: string, metadataUrl: string, pause?: boolean, gas?: number, freight?: number): Promise<string>;
    function getSimpleStorage(server: string, address: string): Promise<SingleAssetSimpleStorage>;
    function getTokenDefinition(server: string, mapid: number): Promise<SingleAssetTokenDefinition>;
    function activate(server: string, address: string, signer: Signer, keystore: KeyStore, fee: number, gas?: number, freight?: number): Promise<string>;
    function deactivate(server: string, address: string, signer: Signer, keystore: KeyStore, fee: number, gas?: number, freight?: number): Promise<string>;
    function changeAdministrator(server: string, address: string, signer: Signer, keystore: KeyStore, fee: number, administrator: string, gas?: number, freight?: number): Promise<string>;
    function mint(server: string, address: string, signer: Signer, keystore: KeyStore, fee: number, destination: string, amount: number, metadata: Record<string, string>, gas?: number, freight?: number): Promise<string>;
    function transfer(server: string, address: string, signer: Signer, keystore: KeyStore, fee: number, source: string, transfers: TransferPair[], gas?: number, freight?: number): Promise<string>;
    function addOperators(server: string, address: string, signer: Signer, keystore: KeyStore, fee: number, updateOps: UpdateOperator[], gas?: number, freight?: number): Promise<string>;
    function removeOperators(server: string, address: string, signer: Signer, keystore: KeyStore, fee: number, updateOps: UpdateOperator[], gas?: number, freight?: number): Promise<string>;
    function getAccountBalance(server: string, mapid: number, account: string, balancePath?: string): Promise<number>;
}
export {};
